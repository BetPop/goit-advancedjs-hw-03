import{i as o,a as w,S as L}from"./assets/vendor-BMHzDZyJ.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function c(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(t){if(t.ep)return;t.ep=!0;const s=c(t);fetch(t.href,s)}})();o.settings({position:"topRight"});const E="44296746-7471de79088029a055864728c",$="https://pixabay.com/api/",u=async(r,e)=>{const c=`${$}?key=${E}&q=${r}&image_type=photo&orientation=horizontal&safesearch=false&page=${e}&per_page=40`;try{return(await w.get(c)).data}catch(i){console.error("Error fetching images:",i),o.error({title:"Error",message:"Failed to fetch images"})}},I=document.getElementById("search-form"),h=document.querySelector(".gallery"),y=document.getElementById("loader");let d="",a=1,m=0,g,S=!0;const v=()=>y.classList.remove("hidden"),f=()=>y.classList.add("hidden"),O=({webformatURL:r,largeImageURL:e,tags:c,likes:i,views:t,comments:s,downloads:l})=>`
  <div class="photo-card">
    <a href="${e}" data-lightbox="gallery">
      <img src="${r}" alt="${c}" loading="lazy" />
    </a>
    <div class="info">
      <div class="info-item-wrapper"><p class="info-item"><b>Likes</b></p><p class="info-item">${i}</p></div>
      <div class="info-item-wrapper"><p class="info-item"><b>Views</b></p><p class="info-item">${t}</p></div>
      <div class="info-item-wrapper"><p class="info-item"><b>Comments</b></p><p class="info-item">${s}</p></div>
      <div class="info-item-wrapper"><p class="info-item"><b>Downloads</b></p><p class="info-item">${l}</p></div>
    </div>
  </div>
`,b=r=>{const e=r.map(O).join("");h.insertAdjacentHTML("beforeend",e),g?g.refresh():g=new L(".gallery a",{captionsData:"alt",captionDelay:250})},P=async r=>{if(r.preventDefault(),d=r.currentTarget.elements.searchQuery.value.trim(),!d){o.warning({title:"Warning",message:"Please enter a valid search query."});return}a=1,h.innerHTML="",p.unobserve(n),v();try{const e=await u(d,a);if(f(),!e||e.hits.length===0){o.warning({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!"});return}m=e.totalHits,o.success({title:"Hooray!",message:`We found ${m} images.`}),b(e.hits),p.observe(n),e.hits.length<40&&o.warning({title:"End of results",message:"You've reached the end of search results."})}catch{f(),o.error({title:"Error",message:"Something went wrong."})}};I.addEventListener("submit",P);const q=async()=>{if(d&&a*40<m){a+=1,v();try{const r=await u(d,a);f(),b(r.hits),(r.hits.length<40||a*40>=m)&&(o.warning({title:"End of results",message:"You've reached the end of search results."}),p.unobserve(n))}catch{f(),o.error({title:"Error",message:"Failed to load more images."})}}},x=r=>{r.forEach(e=>{e.isIntersecting&&S&&q()})},p=new IntersectionObserver(x,{rootMargin:"200px"}),n=document.createElement("div");n.className="sentinel";document.body.appendChild(n);p.observe(n);
//# sourceMappingURL=index.js.map
